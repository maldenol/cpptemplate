SET(TARGET shared_library)

FILE(GLOB_RECURSE SRC_FILES "${SRC_DIR}/${TARGET}/*.c" "${SRC_DIR}/${TARGET}/*.cpp")
ADD_LIBRARY(${TARGET} SHARED ${SRC_FILES})

ADD_DEPENDENCIES(dev ${TARGET})

SET_TARGET_PROPERTIES(${TARGET} PROPERTIES C_EXTENSIONS OFF)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES C_STANDARD 17)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES C_STANDARD_REQUIRED ON)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES CXX_EXTENSIONS OFF)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES CXX_STANDARD 17)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES CXX_STANDARD_REQUIRED ON)
SET_TARGET_PROPERTIES(${TARGET} PROPERTIES LINKER_LANGUAGE CXX)

TARGET_COMPILE_OPTIONS(${TARGET} PUBLIC
  $<$<COMPILE_LANG_AND_ID:C,GNU,Clang>:-Wall -Wextra -Wpedantic -Werror -g -fsanitize=address,undefined> #[[,thread]]
  $<$<COMPILE_LANG_AND_ID:CXX,GNU,Clang>:-Wall -Wextra -Wpedantic -Werror -g -fsanitize=address,undefined> #[[,thread]]
)
TARGET_LINK_OPTIONS(${TARGET} PUBLIC
  $<$<LINK_LANG_AND_ID:C,GNU,Clang>:-pthread -lX11 -g -fsanitize=address,undefined> #[[,thread]]
  $<$<LINK_LANG_AND_ID:CXX,GNU,Clang>:-pthread -lX11 -g -fsanitize=address,undefined> #[[,thread]]
)

TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE ${INC_DIR})
FILE(GLOB_RECURSE LIB_FILES "${LIB_DIR}/*.a" "${LIB_DIR}/*.so" "${LIB_DIR}/*.lib")
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${LIB_FILES})

FIND_PACKAGE(Qt5 COMPONENTS Core Quick REQUIRED)
TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE Qt)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${Qt5Core_LIBRARIES} ${Qt5Quick_LIBRARIES})

FIND_PACKAGE(Boost REQUIRED)
TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE ${Boost_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${Boost_LIBRARIES})

FIND_PACKAGE(Vulkan REQUIRED)
TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE ${Vulkan_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${Vulkan_LIBRARIES})

FIND_PACKAGE(GTest REQUIRED)
TARGET_INCLUDE_DIRECTORIES(${TARGET} PRIVATE ${GTest_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${GTest_LIBRARIES})
