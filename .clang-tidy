---
Checks: 'clang-diagnostic-*,clang-analyzer-*,cppcoreguidelines-*,modernize-*,performance-*,portability-*,readability-identifier-naming'
WarningsAsErrors:	true
FormatStyle: LLVM
CheckOptions:
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.ConstexprVariableCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: K_ }
  - { key: readability-identifier-naming.GlobalVariablePrefix, value: g_ }

  - { key: readability-identifier-naming.ParameterCase, value: lower_case }
  - { key: readability-identifier-naming.ConstantParameterCase, value: lower_case }
  - { key: readability-identifier-naming.PointerParameterCase, value: lower_case }
  - { key: readability-identifier-naming.ConstantPointerParameterCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterPackCase, value: lower_case }
  - { key: readability-identifier-naming.TemplateParameterCase, value: lower_case }
  - { key: readability-identifier-naming.TemplateTemplateParameterCase, value: lower_case }
  - { key: readability-identifier-naming.TypeTemplateParameterCase, value: lower_case }
  - { key: readability-identifier-naming.ValueTemplateParameterCase, value: lower_case }

  - { key: readability-identifier-naming.ClassMemberCase, value: lower_case }
  - { key: readability-identifier-naming.ClassMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.PublicMemberCase, value: lower_case }
  - { key: readability-identifier-naming.PublicMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.PrivateMemberCase, value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m_ }
  - { key: readability-identifier-naming.ProtectedMemberCase, value: lower_case }
  - { key: readability-identifier-naming.ProtectedMemberPrefix, value: m_ }

  - { key: readability-identifier-naming.NamespaceCase, value: CamelCase }
  - { key: readability-identifier-naming.InlineNamespaceCase, value: CamelCase }
